public class countInversionOO {
    public static void main(String[] args) {
    int []arr = {1,20,6,4,5};
    System.out.print(mergesortandcount(arr,0, arr.length-1));
    }
    private static int mergeandcount(int[]arr,int l,int m,int r){
        int left[] = Arrays.copyOfRange(arr,l,m+1);
        int right[] = Arrays.copyOfRange(arr,m+1,r+1);
        int i=0;
        int j=0;
        int k=l;
        int swaps=0;
        while (i<left.length && j<right.length){
            if (left[i]<=right[j]){
                arr[k++]=left[i++];
            }else {
                arr[k++]=right[j++];
                swaps=swaps+(m+1)-(l+i);
            }
        }
        return swaps;
    }
    private static int mergesortandcount(int[]arr,int l,int r){
        int count = 0;
        if (l<r){
            int m = (l+r)/2;
            count+=mergesortandcount(arr,l,m);
            count+=mergesortandcount(arr,m+1,r);
            count+=mergeandcount(arr,l,m,r);
        }
        return count;
    }
}
